/*
Маємо юзера , з номерами телефона*/

// const userTelephone1 = '380632812409';
// const userTelephone2 = '380649612474';
// const userTelephone3 = '380649340902'; 


//  //Ці змінні між собою не пов'язані ! А мають бути...

//  const userTelephones = {
//   0: '380632812409',
//   1: '380649612474',
//   2: '380649340902'
//  }
   
 // але об'єкти не надають нам можливості керувати порядком властивостей. 
 // Для цього є Масив (Array)

 // Оголошення масиву з використанням літералу  - [] 
 // Коллекція чисел
 // Перераховуються через кому, та знаходяться в квадрат дужках

 // 1 спосіб

 const arr = [2,4,6,7]; //синтаксичний спосіб над 2гим способом

 // 2 спосіб використати Конструктор массивів  Array

 const arr2 = new Array (2,4,6,7);

/* 

Тепер це упорядочена коллекція, що починається з 0 !!!
- Можно звертатися до індексів масивy: 0,1,2,3; 
- length - довжина массиву- для отримання кількості елементів у массиві або для перевірки чи пустий масив 
- Порядок важливий (впорядкована структура даних)
- Містить в собі данні, тому за типом даних массив - це ОБʼЄКТ
- Щоб дістати , треба звернутися до массиву (arr) вказати [] всередині вказуємо індекс елементу, який нам потрібен
- Можна присвоювати нові значення за допомогою оператора присвоєння = 
(arr[0] = 200)

 [0]      - зчитування значень
 [0]= 200 - присвоєння значень

*/

//Задача. Вивести всі значення масиву в консолі

//Автоматизувати повторювані дії можна використати цикл! наприклад for

// for (let i = 0; i<= 3; i++) {

// console.log(arr[i]);
// }

//якщо не знаємо скільки в масиві елементів!

// for (let i = 0; i < arr.length; i++);

// console.log(arr[i]);


//Задача : у нас є масив чисел. Вивести на консоль тільки парні числа!

const numberArray = [1,2,3,4,5,6,7,8,9,10]

for (let i = 0; i<= numberArray.length; i++) {
  
      if (numberArray[i] % 2 === 0) {
        console.log(numberArray[i]);
      }
  }

