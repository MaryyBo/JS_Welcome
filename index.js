 /* 
 Массив дає нам методи управління колекціями
 Кожен метод надає певний функціонал для роботи з масивами.
 
 Метод array.concat() - для об'єднання двох або більше масивів в один (новий)

 array.concat(array1, array2,...arrayN)
 
 */


// /* 
//  Метод array.fill() - використовується для заповнення всіх елементів масиву якимсь одним наченням

//  Приймає 3 аргументи array.fill(value, [start,end])
 
//  */


 /* 
 Метод array.includes(елемент, назва, який шукаємо) - для перевірки наявності певного значення у масиві
 
 array.includes( surchValue(елемент, назва, який шукаємо), [FromIndex]
 - Повертає true/false
  
 */


  /* 
   Метод array.indexOf() - для отримання першого входження певного значення в масиві
  array.indexOf (searchElement, [fromIndex пошук починається зі знач яке вказали])
   - Якщо елемент не найдено повертає "-1"
 */

  //  console.log(array4.indexOf(12));


  /* 
   Метод array.join() - oб'єднує всі елементи масиву в рядок
   array.join([separator])
 */

    /* 
   Метод array.push() - додавання 1 або декількох елементів в КІНЕЦЬ масиву
   array.push(element1,element2....elementN)
 */
 
     /* 
   Метод array.pop() - використовується для видалення останнього елементу і змінює довжину на 1цю
   
 */
     /* 
   Метод array.shift() - використовується для видалення 1 елементу з початку масиву
   array.shift ()
 */

  //  const arr1 = [5,12,11,24,85];

     /* 
   Метод array.unshift() - використовується для додавання 1 або декількох елементів на початку масиву
   array.unshift (element1,element2,element3....elementN)
 */
  //  const arr2 = [1,2,3,4];
  //  arr2.unshift(-1,0);

    /* 
   Метод array.reverse() - використовується для перевороту елеменів (сзаду наперед) перевертає масив на місці
   array.reverse ()
 */
  //  const arr3 = [1,2,3,4,5,6];
  //  console.log(arr3.reverse());

   /*Методи, що змінюють вихідний масив називаються - мутуючі
   а ті що не змінюють - НЕ мутуючі (більшість методів масиву)*/


   /*
   
   */
  //  1. Дано два масиви: [1, 2, 3] і [4, 5, 6]. Об'єднайте їх у масив: [1, 2, 3, 4, 5, 6].
  //  2. Дано масив [1, 2, 3]. Зробити з нього масив [3, 2, 1].
  //  3. Даний масив [3, 4, 5]. Додайте йому в кінець елементи 4, 8. 10.
  //  4. Даний масив ['aaa', 'bbb', 'ccc']. Виведіть в консоль останній елемент та видаліть його з масива.
  //  5. Даний масив ['3', 7, 10]. Додайте йому на початок елементи 2, 8.
  //  6. Даний масив ['3', 7, 10]. Отримайте з нього рядок.

  // 1 задача
  // const arr1 = [1,2,3];
  // const arr1n = (4,5,6);
  // const arr1nn = arr1.concat(arr1n)

  // 2 задача
  //  const arr2 = [1,2,3];
  //  arr2.reverse();
  
  // 3 задача
  //  const arr3 = [3,4,5];
  //  arr3.push(4,8,10);

  // 4 задача
  // const arr4 = ['aaa', 'bbb', 'ccc'];
  // console.log(arr4[2]);
  // arr4.pop();
   
  // 5 задача
  // const arr5 = ['3', 7, 10];
  // arr5.unshift(2,8);
  
  // 6 задача
  //  const result = arr5.join();
  //  console.log((result));


  /* 
   Метод array.slice() - для створення нового массиву, який складається 
   тільки з якоїсь певної частини вихідного масиву

   array.slice([begin],[end]) - включаючи begin, і не включаючи end(якщо в якості старту вкажете - мінусове значення, то почнеться з кінця)
   Якщо не вказати нічого, просто зробить копію масиву (не мутуючий)
   - Копіює масив х індекса М (включно) до індекса N (не включаючи)
   arr.slice (M,N);
 */

const arr1 = [1,2,3,4,5,6,7,8]; //вихідний масив

const arr2 = arr1.slice(2,7); //копія вихідного масиву на його основі
const arr3 = arr1.slice(2); // копіювання буде від 2 до кінця масиву


const users = [{ // Масив об'єктів
  name: 'John',
  lastName: 'Doe', //Зберігаються 3 адреси 00XX65345 комірки в пам'яті
},{
  name: 'Jane', //00XX65345 комірки в пам'яті
  lastName: 'Doe',
},{
  name: 'Jack',
  lastName: 'Dosh',//00XX65364 комірки в пам'яті
}]

 const newUsers = users.slice(); //Зкопіювали і створили нових юзерів з const users
 /*Метод slice копіює поверхнево, посилання вказують на одні й ті самі адреси.
  Зміни будуть і в оригінальному масиві і в поверхневій копії.
   */

  const upUsers = newUsers.slice(); //Поверхнева копія поверхневої копії!

  /*Зміни в будь-якому із 1 масиву будуть повторюватись в інших 2
  В массивах лежать одні й ті самі посилання*/ 
